# Multi-stage Dockerfile for Viveo Backend
# Supports both development and production modes

FROM python:3.13-slim AS base

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app

# Set work directory
WORKDIR /app

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        gcc \
        g++ \
        pkg-config \
        default-libmysqlclient-dev \
        curl \
        build-essential \
        wget \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir -r requirements.txt

# Development stage
FROM base AS development

# Install development dependencies
RUN pip install --no-cache-dir watchdog

# Create app user with same permissions as host user
RUN groupadd -g 1000 appgroup && \
    useradd -u 1000 -g appgroup -s /bin/bash -m appuser

# Create necessary directories and set permissions
RUN mkdir -p /app/data/users /app/data/vectors /app/logs /app/database && \
    chown -R appuser:appgroup /app && \
    chmod -R 777 /app/data /app/logs /app/database

# Copy application files
COPY --chown=appuser:appgroup app/ ./app/
COPY --chown=appuser:appgroup data/ ./data/
COPY --chown=appuser:appgroup logs/ ./logs/

# Ensure SQLite database has proper permissions
RUN touch /app/database/users.db && \
    chown appuser:appgroup /app/database/users.db && \
    chmod 666 /app/database/users.db

# Verify app structure
RUN echo "=== App structure ===" && \
    ls -la /app/ && \
    echo "=== App directory ===" && \
    ls -la /app/app/ && \
    echo "=== Environment file ===" && \
    ls -la /app/app/.env 2>/dev/null || echo "No .env file found in app/"

# Expose port
EXPOSE 3334

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3334/health || exit 1

# Run with reload for development
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "3334", "--reload", "--log-level", "info"]

# Production stage
FROM base AS production

# Create app user with same permissions as host user
RUN groupadd -g 1000 appgroup && \
    useradd -u 1000 -g appgroup -s /bin/bash -m appuser

# Create necessary directories with proper permissions
RUN mkdir -p /app/data/users /app/data/vectors /app/logs /app/database && \
    chown -R appuser:appgroup /app && \
    chmod -R 775 /app/data /app/logs /app/database

# Copy application files with proper ownership
COPY --chown=appuser:appgroup app/ ./app/

# Ensure SQLite database has proper permissions
RUN touch /app/database/users.db && \
    chown appuser:appgroup /app/database/users.db && \
    chmod 664 /app/database/users.db

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 3334

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:3334/health || exit 1

# Run without reload for production
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "3334", "--workers", "4"]